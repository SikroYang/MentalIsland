# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
worker_processes 4;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;



#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  logs/access.log  main;

    log_format log_resp_body    '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for" '
                                '$request_time $bytes_sent $request_length "$request_body"'
                                # '"$resp_body"'
                                ;

    # Log in JSON Format
    # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
    # '"remote_addr": "$remote_addr", '
    #  '"body_bytes_sent": $body_bytes_sent, '
    #  '"request_time": $request_time, '
    #  '"response_status": $status, '
    #  '"request": "$request", '
    #  '"request_method": "$request_method", '
    #  '"host": "$host",'
    #  '"upstream_addr": "$upstream_addr",'
    #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
    #  '"http_referrer": "$http_referer", '
    #  '"http_user_agent": "$http_user_agent", '
    #  '"http_version": "$server_protocol", '
    #  '"nginx_access": true }';
    # access_log /dev/stdout nginxlog_json;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout 600s;

    #gzip  on;
    
    upstream portainerce {
        server portainer:9000 max_fails=5 fail_timeout=60s weight=2;
    }

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;

        access_log  logs/access.default.log  log_resp_body;

        location / {
            # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
            proxy_pass http://portainerce;
        }
    }

    # server {
    #     listen       80;
    #     listen       [::]:80
    #     server_name  www.zincsspace.com;

    #     # location / {
    #     #     # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
    #     #     proxy_pass http://zincsspace;
    #     # }

    #     rewrite ^(.*)$  https://$host$1 permanent;
    # }

    server {
        listen 80;
        listen [::]:80;
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name zincsspace.com www.zincsspace.com;

        #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
        #error_page 404/404.html;
        #HTTP_TO_HTTPS_START
        if ($server_port !~ 443){
            rewrite ^(/.*)$ https://$host$1 permanent;
        }
        
        # 判断域名是否包含 www
        if ($host !~* ^www\.) {
            rewrite ^(.*)$  https://www.$host$1 permanent;
        }
        
        send_timeout 600;

        ssl_certificate /etc/nginx/cert/zincsspace.com.pem;
        ssl_certificate_key /etc/nginx/cert/zincsspace.com.key;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        add_header Strict-Transport-Security "max-age=31536000";

        access_log  logs/access.zincsspace.log  log_resp_body;

        location / {
            # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
            # zincsspace;
            proxy_pass http://zincsspace;
        }

        #禁止访问的文件或目录
        location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md)
        {
            return 404;
        }

        #一键申请SSL证书验证目录相关设置
        location /.well-known{
            root /usr/local/openresty/nginx/html;
            allow all;
        }

        #禁止在证书验证目录放入敏感文件
        if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
            return 403;
        }
    }

    # server {
    #     listen       80;
    #     server_name  www.lidaoisland.com;

    #     rewrite ^(.*)$  https://$host$1 permanent;

    #     # access_log  logs/access.resp.log  log_resp_body;

    #     # location / {
    #     #     # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
    #     #     proxy_pass http://lidao:8000;
    #     # }

    #     # location /BackEnd {
    #     #     # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
    #     #     proxy_pass http://MentalIsland:5775;
    #     # }

    #     # location /Upload {
    #     #     # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
    #     #     proxy_pass http://MentalIsland:5775;
    #     # }

    #     # location /Api {
    #     #     # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
    #     #     proxy_pass http://MentalIsland:5775;
    #     # }
    # }

    server {
        listen 80;
        listen [::]:80;
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name lidaoisland.com www.lidaoisland.com;
        
        #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
        #error_page 404/404.html;
        #HTTP_TO_HTTPS_START
        if ($server_port !~ 443){
            rewrite ^(/.*)$ https://$host$1 permanent;
        }
        
        # 判断域名是否包含 www
        if ($host !~* ^www\.) {
            rewrite ^(.*)$  https://www.$host$1 permanent;
        }
        
        send_timeout 600;

        ssl_certificate /etc/nginx/cert/lidaoisland.com.pem;
        ssl_certificate_key /etc/nginx/cert/lidaoisland.com.key;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        add_header Strict-Transport-Security "max-age=31536000";

        access_log  logs/access.lidaoisland.log  log_resp_body;

        # location / {
        #     # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
        #     proxy_pass http://lidao:8000;
        # }

        # location /newland {
        location / {
            # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
            proxy_pass http://lidaonew:8100;
        }

        location /MentalIsland {
            # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
            proxy_pass http://MentalIsland:5775;
        }

        location /BackEnd {
            # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
            proxy_pass http://MentalIsland:5775;
        }

        location /Images {
            # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
            proxy_pass http://MentalIsland:5775;
        }

        location /Upload {
            # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
            proxy_pass http://MentalIsland:5775;
        }

        location /Api {
            # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
            proxy_pass http://MentalIsland:5775;
        }

        #禁止访问的文件或目录
        location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md)
        {
            return 404;
        }

        #一键申请SSL证书验证目录相关设置
        location /.well-known{
            root /usr/local/openresty/nginx/html;
            allow all;
        }

        #禁止在证书验证目录放入敏感文件
        if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
            return 403;
        }
    }

    # server {
    #     listen       80;
    #     server_name  www.lidaoisland.com;

    #     access_log  logs/access.resp.log  log_resp_body;

    #     location / {
    #         # 注意这边访问容器的内网时,端口号需要是容器的端口,而非主机映射端口
    #         proxy_pass http://MentalIsland:5775;
    #     }
    # }

    # Don't reveal OpenResty version to clients.
    # server_tokens off;
}
